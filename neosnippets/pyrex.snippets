snippet unpack
st.unpack(${1:Format}, fp.read(st.calcsize($1))$2
endsnippet
# for qt
# connect
snippet con
self.connect(${1:signal}, SIGNAL('${2:sigFunc}()'), ${3:slot}, SLOT('${4:slotFunc()}'))${5}
endsnippet
# widget class
snippet wcl
class ${1:className}(QWidget):
    def __init__(self, parent=${2:parent}):
        QWidget.__init__(self, parent)
        ${3}
endsnippet

snippet doc "function doc" b
"""${1:doc}"""
$2
endsnippet

snippet plt "import matplotlib" b
import matplotlib.pyplot as plt
${1}
endsnippet

snippet np "import numpy" b
import numpy as np
${1}
endsnippet

snippet tf "import tensorflow" b
import tensorflow as tf
${1}
endsnippet

snippet header "simple template with main" b
#!/usr/bin/env python
def main():
    ${1:pass}

if __name__ == '__main__':
    main()
endsnippet

snippet testheader "template with unittest" b
#!/usr/bin/env python
import unittest
from sys import path as spath
from os import path
spath.insert(0, path.dirname(path.dirname(path.realpath(__file__))))
import ${1:module}

$0

if __name__ == '__main__':
    unittest.main()
endsnippet

snippet pdb
# debugging
print(${1:var})
endsnippet

snippet ifmain "if __main__" b
if __name__ == '__main__':
    ${1:main()}$0
endsnippet

snippet pylintHeader "pylint disable" b
## pylint: disable=C0103, C0111
endsnippet

snippet timing "timing iwth perf_counter" b
from time import perf_counter
old_time = perf_counter()
${0:loop}
print("time used: ", perf_counter() - old_time)${1}
endsnippet
