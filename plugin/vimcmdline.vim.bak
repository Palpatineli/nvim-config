function VimCmdLineSendBlock()
    let comment=split(&commentstring, '%s')[0]
    let startline=search('^'..comment.comment, 'bn')
    let endline=search('^'..comment.comment, 'n')
    let lines=getline(startline+1, endline-1)
    call b:cmdline_source_fun(lines)
    let max=line("$")
    if endline + 1 > max
        call cursor(max, 1)
    else
        call cursor(endline + 1, 1)
    endif
endfunction
function SetupCmdline() 
    " vimcmdline options
    let cmdline_vsplit              = 1      " Split the window vertically
    let cmdline_esc_term            = 1      " Remap <Esc> to :stopinsert in Neovim's terminal
    let cmdline_in_buffer           = 1      " Start the interpreter in a Neovim's terminal
    let cmdline_term_height         = 15     " Initial height of interpreter window or pane
    "let cmdline_term_width         = 80     " Initial width of interpreter window or pane
    let cmdline_tmp_dir             = '/tmp' " Temporary directory to save files
    let cmdline_outhl               = 1      " Syntax highlight the output
    let cmdline_auto_scroll         = 1      " Keep the cursor at the end of terminal (nvim)
    let cmdline_follow_colorscheme  = 1
    nnoremap <silent> <F7> :call VimCmdLineStartApp()<cr>
    nnoremap <silent> <leader>l :call VimCmdLineSendLine()<cr>
    nnoremap <silent> <leader>L :call VimCmdLineSendLineAndStay()<cr>
    nnoremap <silent> <F9> :call VimCmdLineQuit()<cr>
    vnoremap <silent> <leader>R :call VimCmdLineSendSelection()<cr>
    nnoremap <silent> <leader>R :call VimCmdLineSendBlock()<cr>
endfunction
augroup CmdlineLang
    autocmd!
    autocmd FileType typescript,javascript call SetupCmdline()
augroup END
